package org.premo.pizza.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import org.springframework.data.domain.Sort;
import org.springframework.data.domain.Sort.Order;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.dao.DataAccessException;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
//import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import org.premo.pizza.model.Orders;
import org.premo.pizza.repository.OrdersRepository;
import org.premo.pizza.exception.Handler;

/**
 * Order Controller Class
 * We need to create and read orders
 * @author dmiceli
 *
 */

@CrossOrigin(origins="http://localhost:8080")
@RestController
@RequestMapping("/api")
public class OrdersController {

	/**
	 * Hello, Postman <3
	   @RequestMapping("/products")
	   public String printHello(ModelMap model) {
	      model.addAttribute("message", "Hello, Spring MVC!");
	      return "hello";
	   }
	**/
	@Autowired
	OrdersRepository ordersRepo;
	
	@PostMapping("/orders")
	public ResponseEntity<Orders> createOrder(@RequestBody Orders order) {
		try {
			System.out.println(order);
			Orders _order = ordersRepo.save(new Orders(order.getId(), order.getDiscount(), order.getDateplaced(), order.getEmployee(), order.getCustomer()));
			return new ResponseEntity<>(_order, HttpStatus.CREATED);
		}catch(Exception e) {
			return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR); 
		}
	}
	
	@GetMapping("/orders")
	public ResponseEntity<List<Orders>> getAllOrders(@RequestParam(required = false) String name) {
		System.out.println("list");
		try {
			List<Orders> orders = new ArrayList<Orders>();
			ordersRepo.findAll().forEach(orders::add);
			if(orders.isEmpty()) {
				//System.out.println("empty?");
				return new ResponseEntity<>(HttpStatus.NO_CONTENT);
			}
			return new ResponseEntity<List<Orders>>(orders, HttpStatus.OK);
		}catch(Exception e) {
			return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}

}
